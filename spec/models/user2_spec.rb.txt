require 'rails_helper'

RSpec.describe User, type: :model do

  before(:each) do 
    @user = User.create(email: "test@test.com", password: "123456")
  end

  context "validation" do

    it "is valid with valid attributes" do
      expect(@user).to be_a(User)
      expect(@user).to be_valid
    end

    describe "#email" do
      it "should not be valid without email" do
        bad_user = User.create(password: "123456")
        expect(bad_user).not_to be_valid
        expect(bad_user.errors.include?(:email)).to eq(true)
      end
    end

    describe "#email" do
      it "should be well formated" do
        invalid_user = User.create(email: "test.test", password: "123456")
        expect(invalid_user).not_to be_valid
        expect(invalid_user.errors.include?(:email)).to eq(true)
      end
    end

    describe "#password" do
        it "should not be valid without password" do
          bad_user = User.create(email: "test@test.com")
          expect(bad_user).not_to be_valid
          expect(bad_user.errors.include?(:password)).to eq(true)
        end
      end
  
    describe "#password" do
        it "should have at least 6 characters" do
          invalid_user = User.create(email: "test@test.test", password: "12345")
          expect(invalid_user).not_to be_valid
          expect(invalid_user.errors.include?(:password)).to eq(true)
        end
      end
  
  end

  context "associations" do

    describe "users" do
      it "should have_many projects" do
        project = Project.create(user: @user, title: "An amazing project", description: "An amazing description")
        expect(@user.projects.include?(project)).to eq(true)
      end
      
      it "should have_many feats" do
        test_project = Project.create(user: @user, title: "An amazing project", description: "An amazing description")
        feat = Feat.create(user: @user, project: test_project, title: "An amazing feat", description: "An amazing description")
        expect(@user.feats.include?(feat)).to eq(true)
      end

      it "should have_many skills" do
        skill = Skill.create(name: "A test skill")
        @user.skills << skill
        expect(@user.skills.include?(skill)).to eq(true)
      end

      it "should have_many likes" do
        test_project = Project.create(user: @user, title: "An amazing project", description: "An amazing description")
        like = Like.create(user: @user, likeable: test_project)
        expect(@user.likes.include?(like)).to eq(true)
      end
    end
  end
end